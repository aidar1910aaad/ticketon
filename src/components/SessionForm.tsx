"use client";

import { useState } from "react";
import { createEventSession } from "@/api/events/event_session";
import { Plus } from "lucide-react";

interface Props {
  eventId: string;
  onSessionAdded: () => void;
}

export default function SessionForm({ eventId, onSessionAdded }: Props) {
  const [loading, setLoading] = useState(false);
  const [newSession, setNewSession] = useState({
    buildingId: "",
    startTime: "",
    price: "",
  });

  const handleCreateSession = async () => {
    try {
      setLoading(true);
      const token = localStorage.getItem("token");
      if (!token) throw new Error("–¢–æ–∫–µ–Ω –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç");

      if (!newSession.startTime || !newSession.price) {
        alert("–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –¥–∞—Ç—É, –≤—Ä–µ–º—è –∏ —Ü–µ–Ω—É!");
        return;
      }

      // üõ† –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ —Å—Ç—Ä–æ–≥–∏–π UTC ISO 8601 —Ñ–æ—Ä–º–∞—Ç
      const localDate = new Date(newSession.startTime);
      const utcDate = new Date(localDate.getTime() - localDate.getTimezoneOffset() * 60000);
      const formattedStartTime = utcDate.toISOString().replace(".000", ""); // ‚ùó –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –Ω—É–ª–∏

      console.log("üìå –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ —Å –¥–∞—Ç–æ–π:", formattedStartTime);

      await createEventSession(
        {
          eventId,
          price: Number(newSession.price), // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ —á–∏—Å–ª–æ
          startTime: formattedStartTime, // ‚úÖ –°—Ç—Ä–æ–≥–∏–π —Ñ–æ—Ä–º–∞—Ç
          buildingId: newSession.buildingId || undefined, // –ï—Å–ª–∏ –µ—Å—Ç—å buildingId, –¥–æ–±–∞–≤–ª—è–µ–º
        },
        token
      );

      onSessionAdded();
      setNewSession({ startTime: "", price: "", buildingId: "" });
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å–µ—Å—Å–∏–∏:", error);
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="flex flex-col gap-2 mt-2">
      <input
        type="text"
        placeholder="ID –∑–¥–∞–Ω–∏—è (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)"
        className="border px-3 py-2 rounded-lg"
        value={newSession.buildingId}
        onChange={(e) => setNewSession({ ...newSession, buildingId: e.target.value })}
      />
      <input
        type="datetime-local"
        className="border px-3 py-2 rounded-lg"
        value={newSession.startTime}
        onChange={(e) => setNewSession({ ...newSession, startTime: e.target.value })}
      />
      <input
        type="number"
        placeholder="–¶–µ–Ω–∞ –±–∏–ª–µ—Ç–∞"
        className="border px-3 py-2 rounded-lg"
        value={newSession.price}
        onChange={(e) => setNewSession({ ...newSession, price: e.target.value })}
      />
      <button
        onClick={handleCreateSession}
        className="bg-green-600 text-white px-4 py-2 rounded-md flex items-center gap-2"
        disabled={loading}
      >
        <Plus size={16} /> {loading ? "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ..." : "–î–æ–±–∞–≤–∏—Ç—å —Å–µ—Å—Å–∏—é"}
      </button>
    </div>
  );
}
