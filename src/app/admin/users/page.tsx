"use client";

import { useEffect, useState } from "react";
import { Plus, Trash, Edit } from "lucide-react";
import { fetchUsers, updateUser, deleteUser, resetUserPassword } from "@/api/users/index";

interface User {
  id: string;
  name: string;
  surname: string;
  phoneNumber: string;
  role: string;
  isEnabled: boolean;
}

export default function UsersPage() {
  const [users, setUsers] = useState<User[]>([]);
  const [loading, setLoading] = useState<boolean>(true);
  const [error, setError] = useState<string | null>(null);

  // ‚úÖ –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  useEffect(() => {
    const loadUsers = async () => {
      try {
        const data = await fetchUsers();
        setUsers(data.content);
      } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:", error);
        setError("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö.");
      } finally {
        setLoading(false);
      }
    };

    loadUsers();
  }, []);

  // ‚úÖ –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const handleDeleteUser = async (id: string) => {
    if (!confirm("–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è?")) return;
    await deleteUser(id);
    setUsers(users.filter((user) => user.id !== id));
  };

  // ‚úÖ –°–±—Ä–æ—Å –ø–∞—Ä–æ–ª—è
  const handleResetPassword = async (id: string) => {
    const newPassword = prompt("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å:");
    if (!newPassword) return;
    await resetUserPassword(id, newPassword);
    alert("–ü–∞—Ä–æ–ª—å —É—Å–ø–µ—à–Ω–æ —Å–±—Ä–æ—à–µ–Ω!");
  };

  return (
    <div className="p-6">
      <h1 className="text-2xl font-bold mb-4">–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏</h1>

      <button className="bg-blue-600 text-white px-4 py-2 rounded-md flex items-center gap-2">
        <Plus size={16} /> –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      </button>

      {loading ? (
        <p className="mt-4">–ó–∞–≥—Ä—É–∑–∫–∞...</p>
      ) : error ? (
        <p className="mt-4 text-red-500">{error}</p>
      ) : (
        <table className="mt-4 w-full border-collapse border border-gray-300">
          <thead>
            <tr className="bg-gray-200">
              <th className="border p-2">ID</th>
              <th className="border p-2">–ò–º—è</th>
              <th className="border p-2">–§–∞–º–∏–ª–∏—è</th>
              <th className="border p-2">–¢–µ–ª–µ—Ñ–æ–Ω</th>
              <th className="border p-2">–†–æ–ª—å</th>
              <th className="border p-2">–°—Ç–∞—Ç—É—Å</th>
              <th className="border p-2">–î–µ–π—Å—Ç–≤–∏—è</th>
            </tr>
          </thead>
          <tbody>
            {users.map((user) => (
              <tr key={user.id} className="border">
                <td className="p-2 border">{user.id}</td>
                <td className="p-2 border">{user.name}</td>
                <td className="p-2 border">{user.surname}</td>
                <td className="p-2 border">{user.phoneNumber}</td>
                <td className="p-2 border">{user.role}</td>
                <td className="p-2 border">{user.isEnabled ? "–ê–∫—Ç–∏–≤–µ–Ω" : "–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω"}</td>
                <td className="p-2 border flex gap-2">
                  <button className="text-blue-500 flex items-center gap-1">
                    <Edit size={16} /> –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
                  </button>
                  <button
                    onClick={() => handleDeleteUser(user.id)}
                    className="text-red-500 flex items-center gap-1"
                  >
                    <Trash size={16} /> –£–¥–∞–ª–∏—Ç—å
                  </button>
                  <button
                    onClick={() => handleResetPassword(user.id)}
                    className="text-yellow-500 flex items-center gap-1"
                  >
                    üîë –°–±—Ä–æ—Å –ø–∞—Ä–æ–ª—è
                  </button>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      )}
    </div>
  );
}
